name: Post release validation/test
on:
  push:
    branches: 
      - master
    paths:
      - .github/workflows/ci_post_release_test.yml
      # - src/**
      # - tests/automated_tests/**
jobs:
  Post-release-validation:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8' # Version range or exact version of a Python version to use, using SemVer's version range syntax
      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade build
          python -m pip install --upgrade twine
      - name: AZ Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install az ml & set default values for AML
        run: |
          az extension add -n ml -y
          az configure --defaults group=azureml workspace=ws01ent location=westus2
      - name: run ray rl test
        run: |
          run_id=$(az ml job create -f tests/automated_tests/test_rl/job_post_release.yml --query name -o tsv)
          if [[ -z "$run_id" ]]
          then
            echo "Job creation failed"
            exit 3
          fi
          status=$(az ml job show -n $run_id --query status -o tsv)
          if [[ -z "$status" ]]
          then
            echo "Status query failed"
            exit 4
          fi
          running=("Queued" "Starting" "Preparing" "Running" "Finalizing")
          while [[ ${running[*]} =~ $status ]]
          do
            sleep 8 
            status=$(az ml job show -n $run_id --query status -o tsv)
            echo $status
          done
          if [[ "$status" = "Failed" ]]  
          then
            echo "Test case failed"
            exit 3
          fi
      - name: run ray ml test
        run: |
          run_id=$(az ml job create -f tests/automated_tests/test_ray_ml/job_post_release.yml --query name -o tsv)
          if [[ -z "$run_id" ]]
          then
            echo "Job creation failed"
            exit 3
          fi
          status=$(az ml job show -n $run_id --query status -o tsv)
          if [[ -z "$status" ]]
          then
            echo "Status query failed"
            exit 4
          fi
          running=("Queued" "Starting" "Preparing" "Running" "Finalizing")
          while [[ ${running[*]} =~ $status ]]
          do
            sleep 8 
            status=$(az ml job show -n $run_id --query status -o tsv)
            echo $status
          done
          if [[ "$status" = "Failed" ]]  
          then
            echo "Test case failed"
            exit 3
          fi
      - name: run ray spark test
        run: |
          run_id=$(az ml job create -f tests/automated_tests/test_spark/job_post_release.yml --query name -o tsv)
          if [[ -z "$run_id" ]]
          then
            echo "Job creation failed"
            exit 3
          fi
          status=$(az ml job show -n $run_id --query status -o tsv)
          if [[ -z "$status" ]]
          then
            echo "Status query failed"
            exit 4
          fi
          running=("Queued" "Starting" "Preparing" "Running" "Finalizing")
          while [[ ${running[*]} =~ $status ]]
          do
            sleep 8 
            status=$(az ml job show -n $run_id --query status -o tsv)
            echo $status
          done
          if [[ "$status" = "Failed" ]]  
          then
            echo "Test case failed"
            exit 3
          fi
      - name: run ray data test
        run: |
          run_id=$(az ml job create -f tests/automated_tests/test_ray_data/job_post_release.yml --query name -o tsv)
          if [[ -z "$run_id" ]]
          then
            echo "Job creation failed"
            exit 3
          fi
          status=$(az ml job show -n $run_id --query status -o tsv)
          if [[ -z "$status" ]]
          then
            echo "Status query failed"
            exit 4
          fi
          running=("Queued" "Starting" "Preparing" "Running" "Finalizing")
          while [[ ${running[*]} =~ $status ]]
          do
            sleep 8 
            status=$(az ml job show -n $run_id --query status -o tsv)
            echo $status
          done
          if [[ "$status" = "Failed" ]]  
          then
            echo "Test case failed"
            exit 3
          fi
      - name: run ray xgboost-ray test
        run: |
          run_id=$(az ml job create -f tests/automated_tests/test_xgboost_ray/job_post_release.yml --query name -o tsv)
          if [[ -z "$run_id" ]]
          then
            echo "Job creation failed"
            exit 3
          fi
          status=$(az ml job show -n $run_id --query status -o tsv)
          if [[ -z "$status" ]]
          then
            echo "Status query failed"
            exit 4
          fi
          running=("Queued" "Starting" "Preparing" "Running" "Finalizing")
          while [[ ${running[*]} =~ $status ]]
          do
            sleep 8 
            status=$(az ml job show -n $run_id --query status -o tsv)
            echo $status
          done
          if [[ "$status" = "Failed" ]]  
          then
            echo "Test case failed"
            exit 3
          fi
